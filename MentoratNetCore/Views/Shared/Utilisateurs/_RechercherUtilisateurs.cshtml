@model MentoratNetCore.ViewModels._RechercherUtilisateursViewModels

@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    /* SB 2018-07-18
 * Snippet pour déterminé si l'appareil est mobile
 * Adapté de : https://stackoverflow.com/questions/49833925/request-browser-ismobiledevice-equivalent-in-asp-net-core-2-0
*/
    bool estAppareilMobile = false;
    Regex MobileCheck = new Regex(@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino", RegexOptions.IgnoreCase | RegexOptions.Multiline | RegexOptions.Compiled);
    Regex MobileVersionCheck = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-", RegexOptions.IgnoreCase | RegexOptions.Multiline | RegexOptions.Compiled);

    var u = HttpContextAccessor.HttpContext.Request.Headers["HTTP_USER_AGENT"].ToString();

    if (u.Length >= 4)
    {
        if (MobileCheck.IsMatch(u) || MobileVersionCheck.IsMatch(u.Substring(0, 4)))
        {
            estAppareilMobile = true;
        }
    }
    //Fin Snippet pour déterminé si l'appareil est mobile

}
<script>
    //Variable pour le parent pour déterminer pourquoi le onclose
    var varCloseRechercherUtilisateursInfo = "";

    function cboRechercherUtilisateurOnChange(e)
    {

        $("#gridRechercherUtilisateurs").data("kendoGrid").dataSource.read();

    }

    function ObtenirFiltreRoleRechercherUtilisateurs(e)
    {
        var dataItem = $("#cboRolesRechercherUtilisateurs").data("kendoDropDownList");


        var pasDansRole ;
        var dansRole = null;

        pasDansRole=  "@Html.Raw(Model.RoleExclus)";

        if (dataItem.value() != "")
        {
            dansRole =dataItem.value();
        }


        return { 'dansRole':dansRole, 'pasDansRole':pasDansRole };
    }

</script>


@(Html.Label("Afficher les utilisateurs qui sont dans le droit :"))
@(Html.Kendo().DropDownList()
                        .Name("cboRolesRechercherUtilisateurs")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("Roles_Read", "SharedUtilisateurs");
                            }).ServerFiltering(false);
                        })
                        .Filter("contains")
                        .OptionLabel(" ")
                        .DataTextField("NomLong")
                        .DataValueField("Nom")
                        .Events(e => e.Change("cboRechercherUtilisateurOnChange"))
                        .HtmlAttributes(new { style = "width:320px; padding-bottom:.5em;", data_bind = "value:IdCategorie" })
)

@(Html.Kendo().Grid<MentoratNetCore.ViewModels.RechercherUtilisateursViewModels>()
                  .Name("gridRechercherUtilisateurs")
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.NomComplet).Title("Utilisateurs").Filterable(filtre => filtre.Extra(false).Operators(operateur => operateur.ForString(str => str.Clear().Contains("Contient"))));
                      columns.Bound(c => c.CategorieUser).Title("Catégorie").Filterable(filtre => filtre.Extra(true).Operators(operateur => operateur.ForString(str => str.Clear().Contains("Contient"))));
                      columns.Bound(c => c.StatutUser).Title("Statut");
                  })
                  .Scrollable(scroll => scroll.Virtual(true))
                   .Sortable(sortable => sortable
                .AllowUnsort(true)
                .SortMode(GridSortMode.MultipleColumn)
                .ShowIndexes(true))
                  .Filterable()
                          .Selectable(select =>
                          {
                              if (estAppareilMobile)
                              {
                                  select.Mode(GridSelectionMode.Single);
                              }
                              else
                              {
                                  select.Mode(GridSelectionMode.Multiple);
                              }
                          })
                  .PersistSelection(true)
                  .DataSource(dataSource => dataSource
                     .Ajax()
                     .ServerOperation(true)
                      .Model(model => model.Id(p => p.Id))

                      .Read(read => read.Action("Utilisateurs_Read", "SharedUtilisateurs").Data("ObtenirFiltreRoleRechercherUtilisateurs"))
                  )

)

<div class="k-edit-buttons k-state-default">
    @(Html.Kendo().Button()
                        .Name("btnEnregistrerRechercherUtilisateurs")
                        .Content(Model.TexteBoutonEnregistrer)
                        .HtmlAttributes(new { type = "button", @class = "k-primary" })
    )

    @(Html.Kendo().Button()
                .Name("btnAnnulerrRechercherUtilisateurs")
                .Icon("cancel")
                .Content("Annuler")
    )

</div>



<script>
    $('#btnAnnulerrRechercherUtilisateurs').click(function (e) {
        varCloseRechercherUtilisateursInfo = "cancel";
        $(this).closest("[data-role=window]").data("kendoWindow").close();
    });

    $('#btnEnregistrerRechercherUtilisateurs').click(function (e) {
        varCloseRechercherUtilisateursInfo = "save";
        $(this).closest("[data-role=window]").data("kendoWindow").close();
    });
</script>

<style>
    #gridRechercherUtilisateurs {
        max-width: 90vw;
        width: 800px;
    }

    #btnEnregistrerRechercherUtilisateurs {
        margin-top: 10px;
        /* padding-right:10px;
       padding-left:10px;
       margin-right:5px;*/
        min-width: 150px;
    }

    #btnAnnulerrRechercherUtilisateurs {
        margin-top: 10px;
        /* padding-right:10px;
       padding-left:10px;
       margin-right:20px;*/
        min-width: 150px;
    }
</style>